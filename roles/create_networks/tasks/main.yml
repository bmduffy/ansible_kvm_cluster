---

# https://jamielinux.com/docs/libvirt-networking-handbook/index.html

- name: "Check networks"
  virt_net:
    command: list_nets
  register: output

- name: "Get a list of networks"
  set_fact:
    net_names: "{{ output.list_nets }}"

- name: "Define the networks"
  virt_net:
    command: define
    name: "{{ network.name }}"
    xml: '{{ lookup("template", "net-create.xml.j2") }}'
  with_items: "{{ networks }}"
  loop_control:
    loop_var: network
  when: network.name not in net_names

- name: "Start networks so it is activated"
  virt_net:
    name: "{{ item.name }}"
    state: active
  with_items: "{{ networks }}"

- name: "Set networks to autostart"
  virt_net:
    name: "{{ item.name }}"
    autostart: yes
  with_items: "{{ networks }}"

# This is apparently how to configure dnsmsq
# https://liquidat.wordpress.com/2017/03/03/howto-automated-dns-resolution-for-kvmlibvirt-guests-with-a-local-domain/

- name: "Configure NetworkManager to start its own dnsmsq"
  template:
    src: "localdns.conf.j2"
    dest: "{{ local_dns_conf }}"
  become: yes

- name: "Create a libvirt dnsmaq.conf file"
  file:
    path: "{{ libvirt_dnsmasq }}"
    state: touch
  become: yes

- name: "Add servers to dnsmaq in NetworkManager"
  lineinfile:
    path: "{{ libvirt_dnsmasq }}"
    regexp: "^server=/{{ subdomain }}/{{ networks[0].gateway }}"
    line: "server=/{{ subdomain }}/{{ networks[0].gateway }}"
    state: present
  become: yes

- name: "Restart NetworkManager"
  systemd:
    name: "NetworkManager"
    state: reloaded
  become: yes
