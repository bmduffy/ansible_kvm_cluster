---

- name: "Setup node as a yum repo server"
  hosts: repo

  vars:
      rpm_repo: "/var/www/html/repos"

  tasks:
      # TODO:
      # Work Around; There is currently no xfs support for virt-resize
      # so need to grow the root files system manually
      - name: "Make sure the root device is filling the disk"
        command: "xfs_growfs -d /dev/vda1"

      - name: "May be required to import GPG keys"
        command: "rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"

      - name: "Install packages, yum-utils provides reposync"
        yum:
            name: "{{ item }}"
            state: present
        with_items: ["yum-utils", "createrepo", "git"]

      - name: "Ensure '{{ rpm_repo }}' exists"
        file:
            path: "{{ rpm_repo }}"
            state: directory

      - name: "Get rpm packages '{{ inventory_hostname }}'"
        shell: |
            reposync --gpgcheck -lm \
                     --repoid={{ item }} --download_path={{ rpm_repo }}
        args:
            creates: "{{ rpm_repo }}/{{ item }}/Packages"
        with_items: "{{ redhat.rpms.repos }}"

      - name: "Create yum repository '{{ inventory_hostname }}'"
        shell: |
            createrepo -v {{ rpm_repo }}/{{ item }}  \
                       -o {{ rpm_repo }}/{{ item }}
        args:
            creates: "{{ rpm_repo }}/{{ item }}/repodata"
        with_items: "{{ redhat.rpms.repos }}"

      - name: "Recursively set permissions on repo data '{{ rpm_repo }}'"
        file:
            path: "{{ rpm_repo }}"
            state: directory
            owner: root
            group: root
            mode: 0755
            recurse: yes

      - name: "Restore files default SELinux security context"
        command: "restorecon -vR /var/www/html"

      - name: "Set this server up as an Apache server"
        yum:
            name: "{{ item }}"
            state: present
        with_items: ["httpd", "firewalld"]

      - name: "Enable and start firewalld"
        systemd:
            name: "firewalld"
            state: started
            enabled: yes

      - name: "Add firewall rules for http requests"
        firewalld:
            service: http
            permanent: true
            state: enabled
            immediate: true

      - name: "Enable and start httpd Apache server"
        systemd:
            name: "httpd"
            state: started
            enabled: yes

- name: "Configure cluster nodes to pull RPMs from yum repo server"
  hosts: nodes
  vars:
      repo_server_hostname: "{{ groups['repo'][0] }}"
  tasks:
    - name: "Copy yum repo template to '{{ inventory_hostname }}'"
      template:
          src: "templates/ose.repo.j2"
          dest: "/etc/yum.repos.d/ose.repo"

- name: "Setup node as a docker registry"
  hosts: repo
  vars:
      img_repo: "/ocp/images"
  pre_tasks:
      - import_playbook: ./openshift_host_prep.yml
  roles:
      - {role: docker, storage: "production", block_device: "vdb"}
  tasks:
      - name: "Pull all required OCP containerized components"
        shell: "docker pull {{ item }}:{{ redhat.ocp.tag }}"
        with_items: "{{ redhat.ocp.images }}"

      - name: "Pull all additional OCP images for logging and metrics"
        shell: "docker pull {{ item }}:{{ redhat.ocp_add.tag }}"
        with_items: "{{ redhat.ocp_add.images }}"

      - name: "Pull all extra OCP images"
        shell: "docker pull {{ item }}:{{ redhat.ocp_extr.tag }}"
        with_items: "{{ redhat.ocp_extr.images }}"

      - name: "Pull all S2I images"
        shell: "docker pull {{ item }}"
        with_items: "{{ redhat.ocp_s2i.images }}"

      - name: "Create directory for '{{ img_repo }}'"
        file:
            path: "{{ img_repo }}"
            state: directory
